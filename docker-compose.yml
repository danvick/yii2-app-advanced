version: '3.2'

services:

  api:
    build: api
    ports:
      - "20080:80"
    env_file:
      - .env
    volumes:
      # Re-use local composer cache via host-volume
      - ~/.composer-docker/cache:/root/.composer/cache:delegated
      # Mount source-code for development
      - ./:/app

  frontend:
    build: frontend
    ports:
      - "21080:80"
    env_file:
      - .env
    volumes:
      # Re-use local composer cache via host-volume
      - ~/.composer-docker/cache:/root/.composer/cache:delegated
      # Mount source-code for development
      - ./:/app

  backend:
    build: backend
    ports:
      - "22080:80"
    env_file:
      - .env
    volumes:
      # Re-use local composer cache via host-volume
      - ~/.composer-docker/cache:/root/.composer/cache:delegated
      # Mount source-code for development
      - ./:/app

  redis:
    image: redis:latest
    ports:
      - "6380:6379"

  console:
    build: backend
    depends_on:
      - mysql
    env_file:
      - .env
    command: [ "php", "yii", "migrate/up" ]
    volumes:
      # Re-use local composer cache via host-volume
      - ~/.composer-docker/cache:/root/.composer/cache:delegated
      # Mount source-code for development
      - ./:/app

  mysql:
    image: mysql:5.7
    environment:
      - MYSQL_ROOT_PASSWORD=${DB_PASSWORD}
      - MYSQL_DATABASE=${DB_SCHEMA}
#      - MYSQL_USER=${DB_USERNAME}
      - MYSQL_PASSWORD=${DB_PASSWORD}
#      - MYSQL_ROOT_HOST='%'
    command: ["--init-file", "/docker-entrypoint-initdb.d/init.sql"]
    volumes:
      - ./db/storage:/var/lib/mysql:rw
      - ./db/init:/docker-entrypoint-initdb.d/:rw
      - ./db/config:/etc/mysql/conf.d/

  #pgsql:
  #  image: postgres:9.5
  #  environment:
  #    - POSTGRES_DB=yii2advanced
  #    - POSTGRES_USER=yii2advanced
  #    - POSTGRES_PASSWORD=secret